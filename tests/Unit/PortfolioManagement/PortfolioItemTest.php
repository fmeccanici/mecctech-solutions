<?php

namespace Tests\Unit\PortfolioManagement;

use App\PortfolioManagement\Domain\PortfolioItems\Image;
use App\PortfolioManagement\Domain\PortfolioItems\ImageFactory;
use App\PortfolioManagement\Domain\PortfolioItems\TagFactory;
use App\PortfolioManagement\Domain\PortfolioItems\PortfolioItem;
use Tests\TestCase;

class PortfolioItemTest extends TestCase
{
    private PortfolioItem $portfolioItem;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->title = "Test Portfolio Item Title";
        $this->mainImage = new Image("/images/placeholder.png");
        $this->description = "Test Portfolio Item Description";
        $this->websiteUrl = "Test Portfolio Item Website Url";
        $this->images = ImageFactory::placeholders(4);
        $this->tags = TagFactory::multiple(10);
        $this->portfolioItem = new PortfolioItem($this->title, $this->mainImage, $this->description, $this->websiteUrl, $this->images, $this->tags);
    }


    /** @test */
    public function it_should_return_the_correct_title()
    {
        self::assertEquals($this->title, $this->portfolioItem->title());
    }

    /** @test */
    public function it_should_return_the_main_image()
    {
        self::assertEquals($this->mainImage, $this->portfolioItem->mainImage());
    }

    /** @test */
    public function it_should_return_the_correct_description()
    {
        self::assertEquals($this->description, $this->portfolioItem->description());
    }

    /** @test */
    public function it_should_return_the_correct_website_url()
    {
        self::assertEquals($this->websiteUrl, $this->portfolioItem->websiteUrl());
    }

    /** @test */
    public function it_should_return_the_correct_images()
    {
        self::assertEquals($this->images, $this->portfolioItem->images());
    }

    /** @test */
    public function it_should_return_the_correct_tags()
    {
        self::assertEquals($this->tags, $this->portfolioItem->tags());
    }
}
