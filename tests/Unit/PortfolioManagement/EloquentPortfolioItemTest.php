<?php

namespace Tests\Unit\PortfolioManagement;

use App\PortfolioManagement\Infrastructure\Persistence\Eloquent\PortfolioItems\EloquentPortfolioItem;
use App\PortfolioManagement\Infrastructure\Persistence\Eloquent\PortfolioItems\EloquentTag;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class EloquentPortfolioItemTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->eloquentPortfolioItem = new EloquentPortfolioItem([
            "title_en" => "Test Title",
            "title_nl" => "Test Titel",
            "main_image_url" => "Test Url",
            "description_nl" => "Test Beschrijving",
            "description_en" => "Test Description",
            "website_url" => "Test Website Url"
        ]);

        $this->eloquentPortfolioItem->save();

        $this->eloquentTag = new EloquentTag([
            "name" => "Test Tag"
        ]);

        $this->eloquentTag->save();

        $this->eloquentPortfolioItem->tags()->attach($this->eloquentTag);
    }

    /** @test */
    public function it_should_return_the_tags()
    {
        self::assertEquals($this->eloquentTag->attributesToArray(), $this->eloquentPortfolioItem->tags()->first()->attributesToArray());
    }

    /** @test */
    public function it_should_return_main_image_url_with_storage_when_it_exists()
    {
        // Arrange
        \Storage::fake();
        $fileName = "test.jpg";
        \Storage::put($fileName, "test");
        $this->eloquentPortfolioItem->main_image_url = $fileName;
        $this->eloquentPortfolioItem->save();

        // Act & Assert
        self::assertEquals("/storage/test.jpg", $this->eloquentPortfolioItem->main_image_url);
    }

    /** @test */
    public function it_should_return_main_image_url_without_storage_when_it_does_not_exist()
    {
        // Arrange
        $this->eloquentPortfolioItem->main_image_url = "test.jpg";
        $this->eloquentPortfolioItem->save();

        // Act & Assert
        self::assertEquals("test.jpg", $this->eloquentPortfolioItem->main_image_url);
    }
}
