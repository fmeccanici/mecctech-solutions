<?php

namespace Tests\Unit\PortfolioManagement;

use App\PortfolioManagement\Application\GetAllPortfolioItems\GetAllPortfolioItems;
use App\PortfolioManagement\Domain\PortfolioItems\Image;
use App\PortfolioManagement\Domain\PortfolioItems\TagFactory;
use App\PortfolioManagement\Domain\PortfolioItems\PortfolioItem;
use App\PortfolioManagement\Domain\Repositories\PortfolioItemRepositoryInterface;
use App\PortfolioManagement\Presentation\Http\Api\PortfolioManagementController;
use Illuminate\Support\Facades\App;
use Tests\TestCase;
use Illuminate\Http\Request;

class PortfolioManagementControllerTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->portfolioManagementController = new PortfolioManagementController();
    }

    /** @test */
    public function it_should_return_response_with_portfolio_items()
    {
        App::bind(PortfolioItemRepositoryInterface::class, DummyPortfolioItemRepository::class);

        $request = new Request();
        $response = $this->portfolioManagementController->getAllPortfolioItems($request);
        self::assertNotNull($response["meta"]["created_at"]);
        self::assertNotNull($response["payload"]["portfolio_items"]);
    }

    /** @test */
    public function it_should_return_response_with_error_message_when_failed_to_get_all_portfolio_items()
    {
        App::bind(PortfolioItemRepositoryInterface::class, ThrowsExceptionsPortfolioItemRepository::class);

        $request = new Request();
        $response = $this->portfolioManagementController->getAllPortfolioItems($request);
        self::assertNotNull($response["meta"]["created_at"]);
        self::assertNotNull($response["error"]["message"]);
        self::assertNotNull($response["error"]["code"]);
    }

    /** @test */
    public function it_should_return_response_with_portfolio_items_filtered_by_tag()
    {
        App::bind(PortfolioItemRepositoryInterface::class, ReturnConstantPortfolioItemRepository::class);

        $request = new Request([
            "tag" => "Test Tag"
        ]);
        $response = $this->portfolioManagementController->getPortfolioItemsWithTag($request);
        self::assertNotNull($response["payload"]["portfolio_items"]);
        self::assertNotNull($response["meta"]["created_at"]);
    }

    /** @test */
    public function it_should_return_response_with_error_message_when_failed_to_get_portfolio_items_with_tag()
    {
        App::bind(PortfolioItemRepositoryInterface::class, ReturnConstantPortfolioItemRepository::class);

        $request = new Request();
        $response = $this->portfolioManagementController->getPortfolioItemsWithTag($request);
        self::assertNotNull($response["meta"]["created_at"]);
        self::assertNotNull($response["error"]["code"]);
        self::assertNotNull($response["error"]["message"]);
    }
}
